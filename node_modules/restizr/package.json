{
  "name": "restizr",
  "version": "0.5.2",
  "description": "A simple REST mapper for Sequelize",
  "homepage": "http://github.com/guidone/Restizr",
  "author": {
    "name": "Guido Bellomo",
    "email": "guido.bellomo@gmail.com",
    "url": "http://github.com/guidone"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/guidone/Restizr.git"
  },
  "main": "index.js",
  "dependencies": {
    "sequelize": ">= 1.3.5",
    "sugar": "1.2.5"
  },
  "readme": "# Restizr\nRestizr is a lightweight **REST** layer for NodeJS+ExpressJS+Sequelize: given a Sequelize model, automatically creates the REST end points (GET,PUT,POST,DELETE) at specific URL.\n\n## Example\nFor example, given the model\n```var User = sequelize.define('User', {\n\tid: { \n\t\ttype: Sequelize.INTEGER, \n\t\tautoIncrement: true, \n\t\tprimaryKey: true\n\t\t},\t\n  username: { \n\t\ttype: Sequelize.STRING\n\t\t},\n  password: { \n\t\ttype: Sequelize.STRING\n\t\t}\n\t});```\n\nThese simple commands:\n```var Restizr = require('restizr');\nvar rest = new Restizr(app);  // ExpressJS app\nrest.map(User);```\n\nwill create the following REST endpoints:\n- **GET /api/user**: list first 10 records of the table \"user\". Accepts parameters: \n\t\t- limit: the number of records to retrieve\n\t\t- offset: zero based index of the starting record\n\t\t- sort: field used for sorting\n\t\t- direction: could be 'asc' or 'desc'\n\t\t- filter: field used for filtering\n\t-\tquery: query used to filter\nExample: /api/user?limit=20&offset=10\nTo override this values, just insert a onBefore middleware and add or modify keys to the object request.queryString\n- GET /api/user/<id>: get the record with primary key <id> from the table \"user\"\n- POST /api/user: create a new entry in the table \"user\", returns the primary key of the new record\n- DELETE /api/user/<id>: delete the record with primary key <id> from the table \"user\"\n- PUT /api/user/<id>: update the record with primary key <id> from the table \"user\"\n\nWhere *id* is the primary key in the MySQL  table.\n\n## Options\n\n- basepath(default: '/api'): change here to attach the resource REST API to a specific end point\n- engine(default: 'sequelize'): the engine used for the storage, currently only Sequelize in supported\n- limit(default: 10): number of records returned while listing\n- onBefore,onAfter: middlewares executed at the before each request, this is a good place to check session for securing the calls to APIs\n- onBeforeAll,onAfterAll: middlewares execute before and after the listing of the records\n- onBeforeGet,onAfterGet:\n- onBeforePost,onAfterPost:\n- onBeforePut,onAfterPut\n- onBeforeDelete,onAfterDelete: \n\n## Using middlewares\n\nRestizr accepts a number of middlewares to be executed before or after the sigle REST operation in order to perform basic operation, for example check credentials of the client or format the output.\n\n....\n\n\n## Examples on the real world\n\nTBD\n\n## Known issues\nCurrently the module it's in an alpha stage. Error handling is not well supported.\n\n\n\n",
  "_id": "restizr@0.5.2",
  "dist": {
    "shasum": "eb2cd758433d66da0552a632b9b3e6ea8c04643a"
  },
  "_from": "restizr"
}
