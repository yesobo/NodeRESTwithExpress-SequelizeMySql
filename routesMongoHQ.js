// Generated by CoffeeScript 1.3.3
(function() {
  var addPattern;

  addPattern = function(pattern, cb) {
    return db.collection('design_patterns', function(err, collection) {
      return collection.count(function(err, count) {
        pattern.id = count + 1;
        return collection.insert(pattern, function(err, doc) {
          return cb();
        });
      });
    });
  };

  app.get('/api/patterns', function(req, res) {
    return db.collection('design_patterns', function(err, collection) {
      return collection.find().toArray(function(err, items) {
        return res.send(items);
      });
    });
  });

  app.get('/api/patterns/count', function(req, res) {
    return db.collection('design_patterns', function(err, collection) {
      return collection.count(function(err, count) {
        return res.send(count.toString());
      });
    });
  });

  app.get('/api/patterns/:id', function(req, res) {
    var intId;
    intId = parseInt(req.param.id);
    return db.collection('design_patterns', function(err, collection) {
      return collection.findOne({
        id: intId
      }, function(err, item) {
        return res.send(item);
      });
    });
  });

  app.post('/api/patterns', function(req, res) {
    var new_pattern;
    new_pattern = {
      id: null,
      name: req.body.name,
      category: req.body.category,
      intent: req.body.intent,
      motivation: req.body.motivation,
      applicability: req.body.applicability,
      structure: req.body.structure
    };
    return addPattern(new_pattern, function() {
      return res.send(new_pattern);
    });
  });

}).call(this);
